cmake_minimum_required(VERSION 3.10)
project(rvf_protocols)

set(PROTOBUF_ROOT /vcpkg/installed/x64-windows)
set(Protobuf_DIR ${PROTOBUF_ROOT}/share/protobuf)
set(Protobuf_BINARIES ${PROTOBUF_ROOT}/tools/protobuf)
set ( Protobuf_USE_STATIC_LIBS ON )

include(${PROTOBUF_ROOT}/share/protobuf/protobuf-config.cmake)
include(${PROTOBUF_ROOT}/share/protobuf/protobuf-module.cmake)
include(${PROTOBUF_ROOT}/share/protobuf/protobuf-options.cmake)
include(${PROTOBUF_ROOT}/share/protobuf/protobuf-targets.cmake)

find_package( Protobuf REQUIRED HINTS ${PROTOBUF_ROOT}/bin/lib/cmake/protobuf )
if ( Protobuf_FOUND )
    message( STATUS "Protobuf version : ${Protobuf_VERSION}" )
    message( STATUS "Protobuf include path : ${Protobuf_INCLUDE_DIRS}" )
    message( STATUS "Protobuf libraries : ${Protobuf_LIBRARIES}" )
    message( STATUS "Protobuf compiler libraries : ${Protobuf_PROTOC_LIBRARIES}")
    message( STATUS "Protobuf lite libraries : ${Protobuf_LITE_LIBRARIES}")
else()
    message( WARNING "Protobuf package not found -> specify search path via PROTOBUF_ROOT variable")
endif()
include_directories(${Protobuf_INCLUDE_DIRS})
include_directories(${CMAKE_CURRENT_BINARY_DIR})
set(PROTO_SRCS ../cpp/rvf/protocols)
set(PROTO_HDRS ../cpp/rvf/protocols)
execute_process(COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR} --cpp_out=${PROTO_SRCS} ${CMAKE_CURRENT_SOURCE_DIR}/dummytest.proto)
execute_process(COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR} --cpp_out=${PROTO_SRCS} ${CMAKE_CURRENT_SOURCE_DIR}/GPIO.proto)
execute_process(COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR} --cpp_out=${PROTO_SRCS} ${CMAKE_CURRENT_SOURCE_DIR}/IntBV.proto)
execute_process(COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR} --cpp_out=${PROTO_SRCS} ${CMAKE_CURRENT_SOURCE_DIR}/JTAG.proto)
execute_process(COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR} --cpp_out=${PROTO_SRCS} ${CMAKE_CURRENT_SOURCE_DIR}/SCAN.proto)
set(PROTO_SRCS ../p2654model2/rvf/protocols)
execute_process(COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR} --python_out=${PROTO_SRCS} ${CMAKE_CURRENT_SOURCE_DIR}/dummytest.proto)
execute_process(COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR} --python_out=${PROTO_SRCS} ${CMAKE_CURRENT_SOURCE_DIR}/GPIO.proto)
execute_process(COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR} --python_out=${PROTO_SRCS} ${CMAKE_CURRENT_SOURCE_DIR}/IntBV.proto)
execute_process(COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR} --python_out=${PROTO_SRCS} ${CMAKE_CURRENT_SOURCE_DIR}/JTAG.proto)
execute_process(COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${CMAKE_CURRENT_SOURCE_DIR} --python_out=${PROTO_SRCS} ${CMAKE_CURRENT_SOURCE_DIR}/SCAN.proto)
